{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/badges/badges.component.ts","./src/app/badges/badges.component.html","./src/app/graphql.module.ts","./src/app/graphql/admin-gql.service.ts","./src/app/graphql/all-users-with-badges.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { User, AllUsers } from '../graphql/all-users-with-badges.service';\nimport { map } from 'rxjs/operators';\nimport { AddBadgeGQL } from '../graphql/admin-gql.service';\n\n@Component({\n    selector: 'app-admin',\n    templateUrl: './admin.component.html',\n    styleUrls: ['./admin.component.scss']\n})\nexport class AdminComponent implements OnInit {\n\n    users: Observable<User[]>;\n    name: string;\n    userId: number;\n    base64textString: string = \"\";\n\n    constructor(private allUsers: AllUsers, private addBadge: AddBadgeGQL) { }\n\n    ngOnInit(): void {\n        this.users = this.allUsers.watch().valueChanges.pipe(map((result) => result.data.users));\n    }\n\n\n\n    handleFileSelect(evt) {\n        var files = evt.target.files;\n        var file = files[0];\n\n        if (files && file) {\n            var reader = new FileReader();\n            reader.onload = this._handleReaderLoaded.bind(this);\n            reader.readAsBinaryString(file);\n        }\n    }\n\n    _handleReaderLoaded(readerEvt) {\n        var binaryString = readerEvt.target.result;\n\n        this.base64textString = 'data:image/png;base64,' + btoa(binaryString);\n    }\n\n    addBadgeToUser() {\n        console.log('this.userId ' + this.userId);\n        console.log('this.name ' + this.name);\n        console.log('this.base64textString ' + this.base64textString);\n\n        if (!!this.userId && !!this.name && !!this.base64textString) {\n            this.addBadge\n                .mutate({\n                    userId: this.userId,\n                    name: this.name,\n                    image_b64: this.base64textString,\n                })\n                .subscribe();\n        } else {\n            console.log(\"one is empty\");\n            \n        }\n\n    }\n\n}\n","<div>\n    \n</div>\n\n<div>\n    <div>\n        <select [(ngModel)]=\"userId\">\n            <option  [value]=\"i.id\" *ngFor=\"let i of users | async\">{{i.username}}</option>\n        </select>\n    </div>\n\n    <br>\n\n    <input type=\"text\" [(ngModel)]=\"name\">\n\n    <div>\n        <label for=\"filePicker\">Choose or drag a file:</label><br>\n        <input type=\"file\" id=\"filePicker\" (change)=\"handleFileSelect($event)\">\n    </div>\n    <br>\n    <div>\n        <h1>Base64 encoded version</h1>\n        <img src=\"{{base64textString}}\">\n    </div>\n    <div>\n        <button type=\"button\" (click)='addBadgeToUser()'>hey</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { BadgesComponent } from './badges/badges.component';\n\n\nconst routes: Routes = [\n    { path: '', component: BadgesComponent },\n    { path: 'admin', component: AdminComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss']\n})\n\nexport class AppComponent {\n    title = 'angular-graphql';\n}\n","<div class=\"navbar\">\n    <a [routerLink]=\"['']\" routerLinkActive=\"active\" >Home</a>\n    <a [routerLink]=\"['/admin']\" routerLinkActive=\"active\" >Admin</a>\n</div>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { GraphQLModule } from './graphql.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AdminComponent } from './admin/admin.component';\nimport { BadgesComponent } from './badges/badges.component';\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminComponent,\n    BadgesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    GraphQLModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { User, AllUsersWithBadgesService } from '../graphql/all-users-with-badges.service';\n\n\n@Component({\n  selector: 'app-badges',\n  templateUrl: './badges.component.html',\n  styleUrls: ['./badges.component.scss']\n})\nexport class BadgesComponent implements OnInit {\n\n    users: Observable<User[]>;\n\n    constructor(private allUsersWithBadges: AllUsersWithBadgesService) { }\n\n    ngOnInit() {\n        this.users = this.allUsersWithBadges.watch().valueChanges.pipe(map((result)  => result.data.users));\n    }\n\n    onWheel(event: WheelEvent): void {\n        (<Element>event.target).parentElement.scrollLeft += event.deltaY;\n        event.preventDefault();\n     } \n\n     onWheelp(event: WheelEvent): void {\n        (<Element>event.target).parentElement.parentElement.scrollLeft += event.deltaY;\n        event.preventDefault();\n     } \n}\n","<div class=\"content \" role=\"main\">\n    <ul class=\"usersList\">\n        <li class=\"userRow\" *ngFor=\"let user of users | async\">\n            <div class=\"d-ib userName\">\n                <span class=\"center-text\">\n                    {{user.username}}\n                </span>\n            \n            </div>\n            <div class=\"d-ib badges\" (wheel)=\"onWheel($event)\">\n                <div class=\"badgeImg\" *ngFor=\"let badge of user.badges\" (wheel)=\"onWheelp($event)\">\n                    <img width=\"75\" src=\"{{badge.image_b64}}\" alt=\"{{badge.name}}\">\n                </div>\n            </div>\n            \n        </li>\n    </ul>\n</div>\n","import {NgModule} from '@angular/core';\nimport {APOLLO_OPTIONS} from 'apollo-angular';\nimport {ApolloClientOptions, InMemoryCache} from '@apollo/client/core';\nimport {HttpLink} from 'apollo-angular/http';\n\nconst uri = 'https://badge-db.herokuapp.com/v1/graphql'; // <-- add the URL of the GraphQL server here\nexport function createApollo(httpLink: HttpLink): ApolloClientOptions<any> {\n  return {\n    link: httpLink.create({uri}),\n    cache: new InMemoryCache(),\n  };\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APOLLO_OPTIONS,\n      useFactory: createApollo,\n      deps: [HttpLink],\n    },\n  ],\n})\nexport class GraphQLModule {}\n","import { Injectable } from '@angular/core';\nimport { Mutation } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AddBadgeGQL extends Mutation {\n\n    document = gql`\n      mutation addBadge($userId: Int!, $name: String!, $image_b64: String!) {\n        insert_badges(objects: {fk_user_id: $userId, image_b64: $image_b64, name: $name}) {\n            returning {\n                id\n            }\n          }\n      }\n    `;\n}\n","import { Injectable } from '@angular/core';\nimport { Query } from 'apollo-angular';\nimport gql from 'graphql-tag';\n\n\nexport interface User {\n    id: string;\n    username: string,\n    badges: Badge[]\n};\n\nexport interface Badge {\n    name: string,\n    image_b64: string\n}\n\nexport interface Response {\n    users: User[];\n}\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AllUsersWithBadgesService extends Query<Response> {\n\n    document = gql`query UserList {\n        users {\n            id\n            username\n            badges {\n                name\n                image_b64\n            }\n        }\n      }\n    `;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AllUsers extends Query<Response> {\n\n    document = gql`query UserList {\n        users {\n            id\n            username\n        }\n      }\n    `;\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}